gfxreconstruct (0.9.2+30-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.3
  * Update compress convert option handling
  * Add compression format to gfxrecon-info
  * Add meta-data block size utility func
  * Ignore wait operations for imported semaphores
  * Add replay option to sync queue submissions
  * Update usage documentation for CLI arg changes

  [ Dror Smolarsky ]
  * Changes to the build output directories
  * Remove test package generation directory overlap

  [ Mike Schuchardt ]
  * Try more names when dlopen-ing windowing libs

  [ Dustin Graves ]
  * Revert "Remove test package generation directory overlap"
  * Revert "Changes to the build output directories"
  * Refine replay layer check

  [ Dror Smolarsky ]
  * Changes to the build output directories
  * Change code style directive from macro to function

  [ Dustin Graves ]
  * Add build/install dir options to build.py
  * Update build.py 32-bit support
  * Update replay surface management
  * Track replay surfaces/swapchains with IDs
  * Fix file processor error reporting
  * Add buffer/image usage tracker for trimmed files
  * Add generator for resource reference consumer
  * Add trimmed gfxr file optimizer
  * Initial support for descriptor copies
  * Handle consecutive descriptor binding copies
  * Improve descriptor update template handling
  * Stop optimizer when state block not present
  * Update header to 1.2.154
  * Remove alternate --sync option
  * Add file conversion utility to decoder framework

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 18:10:57 -0600

gfxreconstruct (0.9.1+45-1ubuntu20.04-4) focal; urgency=medium

  [ Dustin Graves ]
  * Fix invalid block id from compression convert
  * Fix resize2 block size
  * Update required package list from BUILD.md

  [ John Zupin ]
  * debian: remove README.Debian

 -- John Zupin <john@odin>  Fri, 31 Jul 2020 17:29:51 -0600

gfxreconstruct (0.9.1+45-1ubuntu20.04-3) focal; urgency=medium

  * control: add zlib compression lib to build env
  * rules: build type is now RelWithDebInfo

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 18:27:40 -0600

gfxreconstruct (0.9.1+45-1lunarg20.04-2) focal; urgency=medium

  * UNRELEASED

 -- John Zupin <john@odin>  Tue, 28 Jul 2020 13:41:21 -0600

gfxreconstruct (0.9.1+45-1lunarg20.04-1) focal; urgency=medium

  [ John Zupin ]
  * patch as bionic version

  [ Dustin Graves ]
  * Ensure surfaces are destroyed on replay exit
  * Update main README for usage doc changes
  * Set version to 0.9.2
  * Add missing meta-data types to gfxrecon-compress
  * Send all Xcb atom requests together

  [ Christophe ]
  * Fix interaction with vkconfig

  [ KarenGhavam-lunarG ]
  * Add new LunarG logo to usage docs

  [ Dror Smolarsky ]
  * Add C++ lint  (using clang-tidy) build directives
  * Add clang-tidy config file
  * Add license comments to various CMakeLists files.
  * Add newline at end of framework/util/CMakeLists.txt

  [ Dustin Graves ]
  * Update versioning for tag checkouts
  * Add third party license file
  * Initial GitHub workflows
  * Add refspec option for code style check
  * Enable code style check for CI builds
  * Fix display message decode
  * Replay memory allocator changes to aid debugging
  * Add error logging for compress/decompress
  * Add option to disable abort() message box
  * Add -h option to command line utilities

  [ Mike Schuchardt ]
  * Update header to 1.2.146
  * Refine vk.xml array length processing

  [ xooi ]
  * replay: add resource tracking consumer class
  * replay: add resource tracking consumer base class
  * replay: memory portability first pass implementation
  * replay: update offsets calculation and 2nd pass replay
  * gfxrec-replay: fix resource data tracking and updates
  * replay: add get resources memory requirement calls
  * replay: add --enable-mutipass-replay-portabolity|--emrp
  * replay: fix utility function pointer reference
  * replay: update binding offset calculation for 2 pass replay
  * replay: update --emrp argument option usage

  [ Dustin Graves ]
  * Remove resource tracking code gen
  * Add handle IDs to resource allocator create calls
  * Add const to tracked object info get methods
  * Add custom allocator for binding adjustment
  * Handle allocations with no bindings for realign

  [ John Zupin ]
  * copyright: updated for release

  [ Dustin Graves ]
  * Add constant for null handle IDs
  * Add missing license text
  * Add bind2 support to realign allocator
  * Add flush/invalidate realign support
  * Use pretransform with Android screen orientation
  * Add settings file sample and documentation
  * Update header to 1.2.148

  [ John Zupin ]
  * copyright: updated for lunarg debian files
  * patch: gfxrcon-toascii updated for 148 package
  * patch: updated to patch focal to version

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 17:38:53 -0600

gfxreconstruct (0.9.0+19-0ubuntu18.04) bionic; urgency=medium

  [ David Pinedo ]
  * Change USAGE documents heading

  [ Dustin Graves ]
  * Fix incomplete block at EOF false positive

  [ John Zupin ]
  * control: renamed gfxreconstruct to lunarg-gfxreconstruct

  [ David Pinedo ]
  * Don't allow Cygwin Python for gfxrecon-capture.py

  [ John Zupin ]
  * copyright: updated date

  [ David Pinedo ]
  * Minor usage documenation edits
  * Remove 'python' from cmd line in instructions for running py scripts

  [ Dustin Graves ]
  * Treat sdk branch as release branch
  * Fix size_t to int conversion in compression code

 -- John Zupin <john@odin>  Thu, 04 Jun 2020 18:43:38 -0600

gfxreconstruct (0.9.0+12-0ubuntu18.04) bionic; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.1
  * Use ZSTD_compressBound function

  [ David Pinedo ]
  * Use os.path.join in gfxrecon.py script
  * Remove unneeded imports from python scripts

  [ John Zupin ]
  * copyright: initial update

  [ Dustin Graves ]
  * Fix null assignment in gfxrecon-info
  * Fix incomplete block header check
  * Add missing member initialization

  [ David Pinedo ]
  * Documentation changes for SDK release

  [ Dustin Graves ]
  * Documentation cleanup
  * Replace alt signal stack with SA_ONSTACK override
  * Update header to 1.2.136
  * Update header to 1.2.141

 -- John Zupin <john@odin>  Mon, 01 Jun 2020 19:16:05 -0600

gfxreconstruct (0.9.0-0ubuntu18.04) bionic; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.0

  [ Mike Schuchardt ]
  * Tell clang-format to ignore generated directory
  * Track command buffer handles inside structs

  [ Dustin Graves ]
  * Fixes for clang-tidy issues from util code
  * Address compiler warnings
  * Enable warnings as errors for desktop builds
  * Update Xcb event sequence no comparison logic
  * Warn for VK_INCOMPLETE on replay

  [ xooi ]
  * Add hotkey trim trigger functions
  * Implement trim hotkey trigger in Linux

  [ Dustin Graves ]
  * Add file lock for trimming state snapshot
  * Override default F10 key behavior on Windows
  * Store additional object info in handle map
  * Use HandlePointerDecoder memory for output handles
  * Pointer decoders manage output param allocation
  * Pass PointerDecoder to override funcs
  * Pass handle info struct to replay overrides
  * Add object info structs to object mapper
  * Move replay data to handle info structs
  * Fix vkMapMemory capture with VK_WHOLE_SIZE
  * Use non-stream LZ4 compress/decompress calls
  * Remove try-catch blocks from compression code
  * Add fullscreen exclusive win32 replay support
  * Fix command tracking warnings
  * Remove the page guard lazy copy option
  * Add persistent memory page guard option
  * Use bitwise operations with page size calculations
  * Add buffer size alignment page guard option
  * Update page guard interface for imported memory
  * Add AHardwareBuffer support
  * Add AHB creation to trim state snapshot
  * Remove persistent shadow memory table
  * Make all VulkanConsumer methods empty functions
  * Add a gfxrecon-info command line utility

  [ David Pinedo ]
  * Fix encode/decode of wchar_t strings

  [ Dustin Graves ]
  * Ensure 16-bit encode/decode for LPCWSTR
  * Add trimming support for bind2 calls
  * Add support for Zstandard compression
  * Case insensitive arg comparison for gfxrecon-compress
  * Fix enum util declarations
  * Fix Android replay crash on error
  * Initial memory allocator implementation
  * Integrate memory allocator with replay consumer
  * Add memory type index remapping
  * Record device memory reqs before device creation
  * Remove redundant memory prop tracking
  * Override physical device memory property replay
  * Expand allocator interface for resource creation
  * Add VMA dependency
  * Initial rebind allocator implementation
  * Mapped memory write remap for rebind allocator
  * Add rebind support for bind buffer2/image2
  * Add rebind support for flush/invalidate ranges
  * Decouple replay consumer and resource allocator
  * Update trim file replay for memory portability
  * Handle image row alignment mismatch on replay
  * Add --memory-translation replay option
  * Add missing resource queries to trim state
  * Add phys device memory props to trim state
  * Report replay memory incompatibility

  [ Greg Fischer ]
  * Replace shader feature

  [ Mike Schuchardt ]
  * Dynamically load linux windowing libs for replay
  * Linux replay wsi fallback
  * Add replay argument for WSI selection

  [ Greg Fischer ]
  * Shader extract feature
  * Use handle id in filename for shader extract and replace.

  [ Mike Schuchardt ]
  * Move platform keyboard code into util
  * dlopen xcb-keysyms.so for XCB hotkey capture
  * Add hotkey support for Xlib via XCB
  * Improve hotkey capture error messages

  [ Dustin Graves ]
  * Fix const behavior for consumer classes
  * Use pointer decoder output memory for handles
  * On demand replay handle memory allocation
  * Return replay size from enum phys devices override
  * Store variable array counts on replay
  * Adjust variable array size on replay
  * Conditional allocation for replay outputs
  * Update to 1.2.134 header
  * Add vkGetPhysicalDeviceToolPropertiesEXT support
  * Cleanup capture layer code
  * Set layer version to project version
  * Conditionally use SA_ONSTACK with sigaction

  [ Greg Fischer ]
  * Fix usage for gfxrecon-extract and gfxrecon --replace shaders.

  [ Mike Schuchardt ]
  * Scale replay wayland surface to match output
  * Add fullscreen support for wayland replay
  * Use reinterpret_cast in wayland loader util

  [ Dustin Graves ]
  * Record phys device props before device creation
  * Handle available physical device differences
  * Fix trim issue with non-zero memory offsets
  * Fix rebind memory translation offsets
  * Add replay memory allocation index check
  * Keep dGPU allocations host visible on rebind
  * Adjust loader search order
  * Build platform XLIB_XRANDR without XLIB
  * Ensure CheckLibraryExists.cmake is included
  * Eliminate duplicate handle mapping code
  * Add missing logging.h include

  [ John Zupin ]
  * Add CMake install rules

  [ Dustin Graves ]
  * Fix replay for image/buffer destroy w/null handle
  * Use sys.executable to invoke Python
  * Track descriptor set dependencies for trim

  [ David Pinedo ]
  * Initial launcher script implementations

  [ Dustin Graves ]
  * Fix 32-bit debug build warning
  * Update extract consumer interface

  [ Bob Ellison ]
  * Update docs for Clang Format v9

  [ Dustin Graves ]
  * Update BUILD and CONTRIBUTING docs
  * Add 32-bit Linux build instructions

  [ David Pinedo ]
  * Renamed layer json file to VkLayer_gfxreconstruct.json

  [ Dustin Graves ]
  * Update for ClangFormat v9

  [ Mike Schuchardt ]
  * Fix path quoting in json generator

  [ John Zupin ]
  * UNRELEASED

 -- John Zupin <john@odin>  Fri, 22 May 2020 17:18:53 -0600

gfxreconstruct (0.8.1-1) unstable; urgency=medium

  * Initial package build for testing

 -- John Zupin <johnz@lunarg.com>  Wed, 20 May 2020 10:59:54 -0600
