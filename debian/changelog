gfxreconstruct (0.9.15+81~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Brad Grantham ]
  * remove mention of VS2015, add VS2022

  [ Dustin Graves ]
  * Initial virtual swapchain implementation

  [ Locke Lin ]
  * Fix VirtualSwapchain crash
  * Add option --virtual-swapchain
  * Replace virtual images in QueuePresent
  * Bugfix for trimming virtual swapchain
  * Bugfix for sreenshots virtual swapchain
  * Eusure Queue and Cmdbuf are the same queue family
  * Set PRESENT_SRC for virtual swapchain image
  * Move ToString to util
  * Add QueueFamilyIndices to create swapchain image
  * Move ProcessSetSwapchainImageStateCommand to virtual swapchain
  * Remove QueueWaitIdle for virtual swapchain
  * Set virtual swapchain as default
  * Combine two CmdPipelineBarrier
  * LunarG copyright to 2022

  [ bradgrantham-lunarg ]
  * move addition of EXTERNAL_MEMORY_CAPABILITIES to CreateInstance (#770)

  [ Panagiotis Apostolou ]
  * Fix in gfxrecon.py script for virtual swapchain (#774)

  [ Locke Lin ]
  * BugFix: If it only calls GetSwapchainImages once

  [ Andrew Cox ]
  * Toascii Switched to Traversing Decoded_ Structs Part 1 of 3
  * Toascii Switched to Traversing Decoded_ Structs Part 2 of 3
  * Toascii Switched to Traversing Decoded_ Structs Part 3 of 3

  [ Locke Lin ]
  * Usage: --use-captured-swapchain-indice

  [ Andrew Cox - LunarG ]
  * Output Addresses From Capture for void* and Opaque Struct* Parameters (#787)
  * Documented Parallel build via build.py (#788)
  * Output Addresses From Capture for void* and Opaque* Struct Members (#789)
  * Changed Pointers to Functions to Output in hex (#795)

  [ Locke Lin ]
  * Adjust MemoryRequirements
  * Trimming VK_KHR_get_surface_capabilities2

  [ Andrew Cox - LunarG ]
  * Convert Handles to Strings using Common Path for Arguments and Members (#800)

  [ bradgrantham-lunarg ]
  * Fix crashes when Android surface can't be opened (#796)

  [ Brad Grantham ]
  * add g++ to Fedora dependencies

  [ bradgrantham-lunarg ]
  * warn in case of corrupt descriptor update template encoding (#804)
  * create and use CreateHardwareBufferCommandHeader2 (#797)

  [ Brad Grantham ]
  * warn if deprecated CreateHardwareBufferCommandHeader is decoded

  [ bradgrantham-lunarg ]
  * warn instead of fatal on different image index (#805)

  [ Brad Grantham ]
  * fix typo ; Visual Studio 2012 to 2022

  [ Locke Lin ]
  * PrivateData handle unwrapped and duplicated

  [ Dror Smolarsky ]
  * Add an option to the capture script use a capture layer in a given directory (#581)

  [ Andrew Cox - LunarG ]
  * toascii - Minimal Change to Enable JSON Lines Output - Nested Body (#811)

  [ bradgrantham-lunarg ]
  * don't assert on non-decoded and print null instead of "" (#815)
  * print null if the passed array was actually nullptr (#817)

  [ Locke Lin ]
  * Bigfix: Get shaderGroupHandleCaptureReplaySize value
  * Capture for deferred operation
  * Trimming for deferred operation
  * Switch end_can_clear_ on DecodeAllocator
  * Custom Decode_vkCreateRayTracingPipelinesKHR
  * Replay for deferred operation

  [ bradgrantham-lunarg ]
  * Add braces around if statement block

  [ Locke Lin ]
  * Reject VK_NVX_binary_import

  [ Andrew Cox - LunarG ]
  * Heading Level Corrected (#821)

  [ Andrew Cox ]
  * Toascii - Rearranged Cases in ToString<decode::Decoded_VkWriteDescriptorSet>
  * Toascii - Strip "[out]" Prefix From Variable Names

  [ Panagiotis Apostolou ]
  * Introducing a signal handler watcher thread
  * Check resource binding alignment when page guard is in use
  * Refactor GetSystemPageSize() out of PageGuardManager

  [ Andrew Cox ]
  * Documented ownership of VulkanAsciiConsumerBase::file_
  * Toascii - Header Line with source, and file, project, vulkan versions
  * Renamed gfxrecon-toascii to gfxrecon-convert
  * Heading Consistency

  [ Locke Lin ]
  * Surface and format could be NULL
  * data is nullptr to cause fail. Skip it.

  [ bradgrantham-lunarg ]
  * Update vulkan_state_writer.cpp
  * don't dereference a possibly null pointer (#839)

  [ Panagiotis Apostolou ]
  * Fix for android trimmed replay stats

  [ bradgrantham-lunarg ]
  * Revert "Add an option to the capture script use a capture layer in a given directory (#581)" (#844)

  [ Locke Lin ]
  * Trimming vkTrimCommandPool
  * Trimming vkSetPrivateData
  * Bugfix: Clear container before Copy
  * Replay VkDeviceGroupDeviceCreateInfo
  * Save replay_device_group in DeviceInfo

  [ Brad Grantham ]
  * fix usage message spacing

  [ Andrew Cox ]
  * Document gfxrecon-convert and JSON Lines Format
  * JSON String Escaping
  * Changed null pointer representation to null
  * Convert - Changed Default Extension to jsonl

  [ Locke Lin ]
  * Free virtual swapchain by VulkanResourceAllocator

  [ Illia Polishchuk ]
  * Add VkImportMemoryHostPointerInfoEXT replaying support (#803)

  [ bradgrantham-lunarg ]
  * add blurb about appropriate use (#854)

  [ Andrew Cox - LunarG ]
  * Add Convert to gfxrecon.py and Enable it in Build (#852)

  [ Brad Grantham ]
  * Update header to 1.3.231

  [ John Zupin ]
  * packaging: update patches

 -- john <john@odin>  Tue, 18 Oct 2022 13:21:54 -0600

gfxreconstruct (0.9.11+61~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Panagiotis Apostolou ]
  * Fix for multiple android surfaces workaround
  * Track protected queues creation when capturing and replaying trimmed
  * Correct check of mmap's return value

  [ bradgrantham-lunarg ]
  * use the metadatapointer for the loop index (#727)

  [ Panagiotis Apostolou ]
  * Make SetRayTracingShaderGroupHandlesCommandHeader`s size constant
  * Unblock SIGSEGV everytime a memory protection is applied on a region
  * Documenting a known issue of the page guard mechanism

  [ bradgrantham-lunarg ]
  * write an empty buffer if AHB map fails and print some debug info (#730)

  [ Andrew Cox - LunarG ]
  * Noted need to run python code gen after submodule update (#711)
  * Screen out Unsupported Device Extensions (#733)
  * Declared default for setting. (#740)

  [ Brad Grantham ]
  * fix spelling error

  [ Panagiotis Apostolou ]
  * Fix for race condition - deadlock
  * Keep same usage flags for AHB when replaying

  [ bradgrantham-lunarg ]
  * also catch base exception and print what() (#750)

  [ David Donaldson ]
  * Reserve format::MetaDataType values for future use
  * Prevent size_t from being used in capture format

  [ Locke Lin ]
  * Update header to 1.3.224
  * Set version to 0.9.15

 -- john <john@odin>  Tue, 16 Aug 2022 09:56:37 -0600

gfxreconstruct (0.9.11+42~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Brad Grantham ]
  * remove toascii reference from USAGE_desktop.md
  * remove unused variable

  [ Panagiotis Apostolou ]
  * Issue-506: Fix for XCloseDisplay segfaults
  * issue-515: Picking wrong physical device when multiple are present

  [ Locke Lin ]
  * Trimming VK_KHR_synchronization2

  [ bradgrantham-lunarg ]
  * add new option --omit-null-hardware-buffers (#694)

  [ Brad Grantham ]
  * make message about omitting NULL AHardwareBuffer* INFO

  [ Andrew Cox ]
  * Updated Catch2 Header to Latest

  [ panos-lunarg ]
  * add measurement framerange support (#697)

  [ Brad Grantham ]
  * Set version to 0.9.13

  [ bradgrantham-lunarg ]
  * add CreateHardwareBuffer at the earliest reference to an AHardwareBuffer (#704)

  [ Brad Grantham ]
  * WARN just once if AHB is not found

  [ bradgrantham-lunarg ]
  * Update header to 1.3.215 (#706)

  [ Brad Grantham ]
  * Set version to 0.9.14

  [ bradgrantham-lunarg ]
  * Update header to 1.3.216 (#708)
  * Provide a GetPhysicalDeviceProcAddr function (#713)
  * restore vk_layerGetPhysicalDeviceProcAddr entry in procaddr table (#714)

 -- john <john@odin>  Thu, 09 Jun 2022 10:42:14 -0600

gfxreconstruct (0.9.11+24~rc2-1lunarg20.04-1) focal; urgency=medium

  [ Brad Grantham ]
  * update some copyright dates

 -- john <john@odin>  Fri, 15 Apr 2022 11:32:29 -0600

gfxreconstruct (0.9.11+24~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Locke Lin ]
  * Update header to 1.3.211

 -- john <john@odin>  Mon, 11 Apr 2022 13:51:36 -0600

gfxreconstruct (0.9.11+23~rc1-1lunarg20.04-1) focal; urgency=medium

  [ David Pinedo ]
  * gfxrecon-toascii: Remove extra 0x when printing handles and pointers (#680)

  [ Locke Lin ]
  * Set version to 0.9.12
  * Update header to 1.3.209
  * Update header to 1.3.210

 -- john <john@odin>  Fri, 01 Apr 2022 11:32:58 -0600

gfxreconstruct (0.9.11+21~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Brad Grantham ]
  * pass the layer name downchain to EnumerateDeviceExtensionProperties
  * fix member naming to match the convention

  [ patrick-lunarg ]
  * Debugging Android test failure

  [ PatrickPurcell ]
  * Revert "Debugging Android test failure"

  [ patrick-lunarg ]
  * Adding toascii output cmd line argument

  [ Locke Lin ]
  * Trimming: VK_KHR_buffer_device_address
  * Bugfix: Record pNext in DescriptorInfo
  * Remove enumutil::GetResultValueString

  [ Brad Grantham ]
  * fix unprintable character

  [ patrick-lunarg ]
  * Making IsArgumentSet() act like IsOptionSet()
  * Rearranging logic that sets arguments_present_

  [ Brad Grantham ]
  * update usage
  * update usage for toascii --output

  [ patrick-lunarg ]
  * Setting up ApiCallInfo during file processing parent 1e34f08c46a86260875172056da96461f48e1191 author patrick-lunarg <patrick@lunarg.com> 1645220761 -0800 committer patrick-lunarg <patrick@lunarg.com> 1645564445 -0800

  [ David Pinedo ]
  * Added omissions to layer manifest and vk_layer_settings.txt

  [ Brad Grantham ]
  * use name from source PR
  * restore trimming with NONE compression
  * temporarily disable toascii
  * restore hash as filename suffix for shader replacement
  * clarify errors for disabled file compression module

  [ Carl Ritson ]
  * Add option to limit hotkey captures to a specific frame count

  [ Brad Grantham ]
  * use static_cast consistent with existing codebase

  [ Locke Lin ]
  * Fix compiling with gcc11

  [ Brad Grantham ]
  * remove unsequenced modification and access

  [ Locke Lin ]
  * Set version to 0.9.12
  * Update header to 1.3.209

 -- john <john@odin>  Tue, 29 Mar 2022 14:59:35 -0600

gfxreconstruct (0.9.10+37~rc1-1lunarg20.04-1) focal; urgency=medium

  [ David Pinedo ]
  * Added omissions to layer manifest and vk_layer_settings.txt

 -- john <john@odin>  Thu, 24 Feb 2022 16:02:37 -0700

gfxreconstruct (0.9.10+32~rc2-1lunarg20.04-1) focal; urgency=medium

  [ Brad Grantham ]
  * fix anchor for Android build section
  * use strcmp to compare strings and use defined constant
  * fix clang-format

  [ Locke Lin ]
  * VkFlags64's enum need a diffferent way to print
  * Update header to 1.3.204
  * Set version to 0.9.11
  * Trimming replay SurfaceCapabilities

 -- John Zupin <john@odin>  Mon, 07 Feb 2022 14:03:37 -0700

gfxreconstruct (0.9.10+32~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Tomek Bury ]
  * Add direct display support

  [ Locke Lin ]
  * Print VkStructureType string
  * Wrong error log
  * Build 32-bit in Ubuntu

  [ patrick-lunarg ]
  * Debugging Android test failure

  [ PatrickPurcell ]
  * Revert "Debugging Android test failure"

  [ patrick-lunarg ]
  * Setting up WSI selection

  [ Brad Grantham ]
  * make s_alt_stack dynamic, save and use probed size
  * Delete unused prototype

  [ patrick-lunarg ]
  * Debugging Android test failure

  [ PatrickPurcell ]
  * Revert "Debugging Android test failure"

  [ patrick-lunarg ]
  * Adding VkRenderPassCreateInfo2 handler
  * Fixing push descriptor handling for trimming
  * Clearing unrelated diff
  * Clang format
  * Clang format
  * Adding custom_vulkan_command_buffer_util.cpp to Android CMakeLists.txt
  * General cleanup
  * General cleanup
  * Clang format

  [ Locke Lin ]
  * Copy pNext structure
  * Trimming: Bind memory2
  * Trimming: Bind swapchain image memory2

  [ Brad Grantham ]
  * exit with failure if FileProcessor can't be initialized
  * fix style
  * fix spelling
  * make exit from main more consistent

  [ Locke Lin ]
  * Trimming: VK_EXT_inline_uniform_block
  * Trimming: VK_EXT_full_screen_exclusive
  * VkFlags64's enum need a diffferent way to print
  * Update header to 1.3.204
  * Set version to 0.9.11

  [ John Zupin ]
  * packaging: update copyright
  * packaging: rebased patches

 -- John Zupin <john@odin>  Thu, 03 Feb 2022 16:13:05 -0700

gfxreconstruct (0.9.10~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Locke Lin ]
  * Update header to 1.2.189
  * Set version to 0.9.9

  [ Brad Grantham ]
  * Add YAPF style file and note in CONTRIBUTING.md

  [ patrick-lunarg ]
  * Updating python formatting via yapf
  * Wrapping C++ code string literals in yapf disable/enable comments
  * Applying yapf formatting

  [ Per Inge Mathisen ]
  * Allow overriding GFXRECON_PROJECT_VERSION_DESIGNATION for custom builds.

  [ Jeffrey Yang ]
  * The queue submit info count may be 0

  [ Per Inge Mathisen ]
  * Add toolchain to make a static build for HPC clusters.

  [ Dror Smolarsky ]
  * Applying patches containing custom Vulkan registry changes

  [ patrick-lunarg ]
  * Fixing variable rename

  [ Tomek Bury ]
  * Add thread support for multi-threaded drivers

  [ patrick-lunarg ]
  * Setting up WsiContext
  * General cleanup
  * General cleanup
  * Applying clang-format
  * Revert "Applying clang-format"
  * Applying clang-format
  * Revert "Applying clang-format"
  * Applying clang-format
  * General cleanup
  * General cleanup
  * General cleanup
  * Fixing wsi context initialization
  * Converting Application from std::unique_ptr to std::shared_ptr
  * General cleanup
  * Setting up error reporting for failed WSI initialization
  * General cleanup
  * Fixing ctor declaration
  * Formatting
  * Addressing code review

  [ Michael Skorokhodov ]
  * Fix compiling with gcc11

  [ Locke Lin ]
  * Code generation
  * Change python format
  * TrackManager to CaptureManager
  * ReplayOptions to VulkanReplayOptions
  * custom_encoder_commands to custom_vulkan_encoder_commands
  * MetaDataType to MetaDataId
  * Fix for VS2015
  * Update header to 1.2.196
  * Set version to 0.9.10
  * Update header to 1.2.198
  * Fix for VK_KHR_dynamic_rendering

  [ John Zupin ]
  * packaging: rebased patches

 -- John Zupin <john@odin>  Tue, 16 Nov 2021 17:23:12 -0700

gfxreconstruct (0.9.8+21~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Locke Lin ]
  * Update header to 1.2.182

  [ Danylo Piliaiev ]
  * Limit the number of vkGetQueryPoolResults retries

  [ Mike Schuchardt ]
  * Update layer manifest file

  [ patrick-lunarg ]
  * Setting up Vulkan support for gfxrecon-toascii
  * Filtering Vulkan union members stringification based on parent structures where possible
  * Renaming variable to prevent hiding
  * Removing union ToString<>() functions for unions that are filtered by parent objects

  [ Per Inge Mathisen ]
  * Allow overriding GFXRECON_PROJECT_VERSION_DESIGNATION for custom builds.
  * Fix arm linux builds
  * Add automatic build testing for linux arm build targets

  [ patrick-lunarg ]
  * Updating documentation with toascii description and usage
  * Updating docs to specify that toascii writes to file, not stdout

  [ bradgrantham-lunarg ]
  * Revert "Add automatic build testing for linux arm build targets"
  * Revert "Fix arm linux builds"
  * Revert "Allow overriding GFXRECON_PROJECT_VERSION_DESIGNATION for custom builds."

  [ Locke Lin ]
  * Sort enumNames before generating
  * Generate StateTable and ObjectInfoTable code
  * Update header to 1.2.188
  * Copyright time to 2021

  [ patrick-lunarg ]
  * Adding instructions for building/using VVL with gfxrecon-replay on Android

  [ John Zupin ]
  * packaging: updated rules formatting

  [ Locke Lin ]
  * Update header to 1.2.189
  * Set version to 0.9.9

  [ John Zupin ]
  * packaging: update repo to reflect upstream
  * packaging: rebased patches

 -- John Zupin <john@odin>  Fri, 27 Aug 2021 17:17:15 -0600

gfxreconstruct (0.9.7+17~rc2-1lunarg20.04-1) focal; urgency=medium

  [ Danylo Piliaiev ]
  * Limit the number of vkGetQueryPoolResults retries

 -- John Zupin <john@odin>  Tue, 29 Jun 2021 13:30:47 -0600

gfxreconstruct (0.9.7+17~rc1-1lunarg20.04-1) focal; urgency=medium

  [ David Donaldson ]
  * Combine block header and data into one file write
  * Reserve space in compressed buffer for header
  * Reserve header bytes in parameter encoder
  * Use locked file writes and set write buffer size
  * Add SharedMutex reader-writer mutex util class
  * Use a shared mutex for writing trim state
  * Remove unnecesssary state tracker locking

  [ Dustin Graves ]
  * Check for headless support
  * Remove 'unassisted' memory entry on free
  * Set version to 0.9.8

  [ orbea ]
  * build: Replace NO_XCB with BUILD_WSI_XCB_SUPPORT
  * build: Allow enabling and disabling xlib and wayland support

  [ Christophe ]
  * manifest: some setting are only available on Windows

  [ Dustin Graves ]
  * Add apt-get update to Linux CI build
  * Add documentation for new page_guard settings

  [ David Donaldson ]
  * Fix a race condition and crash when done trimming

  [ Locke Lin ]
  * Update header to 1.2.182

  [ John Zupin ]
  * packaging: rebased packages

 -- John Zupin <john@odin>  Fri, 25 Jun 2021 15:33:29 -0600

gfxreconstruct (0.9.6+16~rc3-1lunarg20.04-1) focal; urgency=medium

  [ Christophe ]
  * Fix layer settings to match layer manifest schema

 -- John Zupin <john@odin>  Fri, 30 Apr 2021 12:38:30 -0600

gfxreconstruct (0.9.6+16~rc2-1lunarg20.04-1) focal; urgency=medium

  [ Mike Schuchardt ]
  * Fix vkconfig built-in variable
  * Fix FindVulkanVersion.cmake for 176

 -- John Zupin <john@odin>  Wed, 28 Apr 2021 11:02:19 -0600

gfxreconstruct (0.9.6+16~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.7

  [ David Donaldson ]
  * Suppress stdout if output to console option is off
  * Track trimmed state acquired image index
  * Link executables with /LARGEADDRESSAWARE on MSVC

  [ tomped01 ]
  * Add arm and arm64 build targets
  * Add sanity check for supported extensions
  * Add support for VK_EXT_headless_surface extension

  [ David Donaldson ]
  * Include state load time in post-replay timing info

  [ John Zupin ]
  * packaging: update debian/copyright file

  [ David Donaldson ]
  * Handle null swapchain in call to destroy swapchain

  [ Alejandro Piñeiro ]
  * Use host coherent as fallback when creating a screenshot copy resource

  [ Dustin Graves ]
  * Limit the number of vkGetEventStatus retries

  [ David Donaldson ]
  * Fix captured format for update desc template calls

  [ Christophe ]
  * Add layer settings to layer manifest

  [ Danil ]
  * Fix invalid python syntax of platform_dict initializer

  [ Dustin Graves ]
  * Add annotations to capture file format

  [ Mike Schuchardt ]
  * Update header to 1.2.176

  [ John Zupin ]
  * packaging: rebased patches

 -- John Zupin <john@odin>  Tue, 27 Apr 2021 14:40:20 -0600

gfxreconstruct (0.9.5+49~rc3-1lunarg20.04-1) focal; urgency=medium

  * packaging: update patch for build info summary

 -- John Zupin <john@odin>  Thu, 25 Feb 2021 16:43:36 -0700

gfxreconstruct (0.9.5+49~rc2-1lunarg20.04-1) focal; urgency=medium

  * packaging: updated LunarG's copyrights

 -- John Zupin <john@odin>  Thu, 25 Feb 2021 14:43:51 -0700

gfxreconstruct (0.9.5+49~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Add replay override for device group enumeration
  * Consolidate replay phys dev initialization
  * Post process enumerate device groups on capture
  * Update header to 1.2.166
  * Set version to 0.9.6
  * Make capture path relative to gfxrecon-capture cwd
  * Make gfxrecon-capture respect PATH
  * Report capture layer version
  * Update gradle version for Android build

  [ David Donaldson ]
  * Fix unhandled enum value warning on Android build
  * Add logging macros that log messages only once
  * Create static lib for common graphics code
  * Refactor common device creation code
  * Only log feature error when feature is used
  * Rename set buffer address for use with other objs
  * Save and replay accel struct device addresses
  * Save and replay device memory opaque addresses
  * Save and replay opaque address even when zero
  * Look for device address features in other struct
  * Only capture/replay addresses if feature enabled
  * Fix incorrect type used when wrapping accel struct
  * Restore header file to project sources

  [ Dustin Graves ]
  * Set extractNativeLibs in Android manifest
  * Fix replay extension tracking for -m rebind

  [ Alejandro Piñeiro ]
  * Use host coherent as fallback when creating a staging buffer

  [ David Donaldson ]
  * Add trimming support for KHR ray tracing pipelines
  * Add util to get pNext struct by type
  * Add state tracking for accel struct descriptors
  * Add support for accel struct descriptor templates
  * Warn if unsupported host accel struct is used

  [ Andres Gomez ]
  * Correct typo in gfxrecon-replay -h output

  [ amhagan ]
  * Fix VkAllocateMemory with Capture/Replay

  [ Mike Schuchardt ]
  * Add replay override for GetRandROutputDisplayEXT
  * Add trim support for mutable descriptor type
  * Add trim support for VK_KHR_timeline_semaphore
  * Fix trim state for descriptors with imm samplers
  * Update header to 1.2.170
  * Add image layout trim state for sync2

  [ David Donaldson ]
  * Add overrides for vkCreateRayTracingPipelinesKHR
  * Enable RT shader grp handle capture replay feature
  * Get capture replay rt shader handle size property
  * Refactor phys device feature and property util
  * Capture ray tracing shader group handle data
  * Replay ray tracing pipeline shader grp handle data
  * Improve dev addr/handle capture feature log msg
  * Improve dev addr/handle replay feature log msg
  * Use vkGetDeviceMemoryOpaqueCaptureAddressKHR
  * Log warning if -m rebind is used with dev addr

  [ Dustin Graves ]
  * Fix screenshot format comparison

 -- John Zupin <john@odin>  Mon, 22 Feb 2021 16:40:30 -0700

gfxreconstruct (0.9.5~rc1-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.5

  [ Mike Schuchardt ]
  * Add encode/decode support for 2d arrays
  * Remove ray tracing from blacklist
  * Add encode/decode support for RT geometry union
  * Remove some warnings on RT vkWriteDescriptorSets

  [ Dustin Graves ]
  * Initial support for opaque buffer addresses

  [ David Donaldson ]
  * Enable bufferDeviceAddressCaptureReplay bit
  * Default initialize replay API version to 1.0

  [ Dustin Graves ]
  * Fix descriptor set failed alloc issue

  [ David Donaldson ]
  * Add MonotonicAllocator utility class
  * Create class interface for decode allocations
  * Use DecodeAllocator when decoding structs
  * Use DecodeAllocator when decoding pointer types
  * Use DecodeAllocater when decoding pNext structs
  * Fix unhandled enumeration values warning
  * Cleanup: remove unused variable

  [ locke-lunarg ]
  * Bug fix & Modify build.md

  [ David Donaldson ]
  * Read outer array length when decoding 2D arrays
  * Enable KHR acceleration structure wrapping

  [ Dustin Graves ]
  * Ignore checkpoint data
  * Prevent cmd.exe from closing on replay exit

  [ David Donaldson ]
  * Add logging options to gfxrecon-replay

  [ John Zupin ]
  * packaging: rebase patches

 -- John Zupin <john@odin>  Thu, 07 Jan 2021 11:53:32 -0700

gfxreconstruct (0.9.3+53-1lunarg20.04-2) focal; urgency=medium

  [ Dustin Graves ]
  * Change to MIT license
  * Remove unused code generator

 -- John Zupin <john@odin>  Mon, 14 Dec 2020 09:35:11 -0700

gfxreconstruct (0.9.3+53-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Fix screenshot format conversion
  * Screenshots preserve srgb format
  * Add --screenshot-all replay option
  * Update Android gfxrecon.py script for new options
  * Update usage docs for screenshot all option
  * Store parent device ID with replay object info
  * Remove replay handle entries on destroy
  * Move handle mapping failure warning
  * Destroy active Vulkan objects on replay exit

  [ John Zupin ]
  * packaging: add optimize back in

  [ Dustin Graves ]
  * Set version to 0.9.4
  * Fix referenced resource consumer override decl
  * Add gfxrecon-optimize usage documentation
  * Add 'optimize' to gfxrecon.py valid commands

  [ Mike Schuchardt ]
  * Tweak gfxrecon-capture.py environment setup
  * Add Xlib support to gfxrecon-replay
  * Add loader for libX11.so
  * Xlib replay VK_ERROR_OUT_OF_DATE_KHR fixes
  * Close xlib replay display before vkDestroyInstance

  [ Dustin Graves ]
  * Skip vkGetPiplelineCacheData calls with --opcd
  * Update gradle version
  * Keep Android screen on while replay is active
  * Ensure orientation is set correctly for Android
  * Stop Android process on activity exit
  * Support Android replay with multiple surfaces
  * Simplify Android process termination
  * Fix AHB memory writes
  * Filter unsupported extensions on replay
  * Filter unsupported features on replay
  * Add --remove-unsupported replay option

  [ Mike Schuchardt ]
  * Load layer settings from system registry location

  [ Dustin Graves ]
  * Attempt to recover from OUT_OF_POOL_MEMORY errors
  * Fix acquire/present image index mismatch on replay
  * Use __android_log_assert for ANDROID_LOG_FATAL
  * Apply /bigobj option to VS2017 builds
  * Add generic handle unwrap/mapping utilities
  * Update codegen encode/decode for generic handles
  * Unwrap physdev handle for device tools ext
  * Set instance create info pNext callbacks on replay
  * Add handle wrapping/mapping unit tests

  [ orbea ]
  * cmake: Add BUILD_WERROR.

  [ Dustin Graves ]
  * Fix descriptor pool destroy override
  * Add direct allocation calls to resource allocator
  * Fix resource cleanup on exit

  [ Mike Schuchardt ]
  * Fix Xlib GetPhysicalDevicePresentationSupport

  [ Dustin Graves ]
  * Apply BUILD_WERROR to MSVC builds
  * Set CMake min version to 3.10.2
  * Adjust code style macro logic
  * Set log level for tests to error and above
  * Warn when a no-op function is called
  * Init allocator funcs by api version/extensions

  [ Mike Schuchardt ]
  * Update header to 1.2.162

  [ John Zupin ]
  * packaging: update copyright

 -- John Zupin <john@odin>  Tue, 08 Dec 2020 11:24:30 -0700

gfxreconstruct (0.9.2+30-1lunarg20.04-2) focal; urgency=medium

  [ Dustin Graves ]
  * Initial screenshot support
  * Add replay options for screenshots

  [ John Zupin ]
  * packaging: update section in control file
  * package: don't install gfxrecon-optimize

  [ Dustin Graves ]
  * Initial screenshot support
  * Add replay options for screenshots

 -- John Zupin <john@odin>  Thu, 01 Oct 2020 17:23:01 -0600

gfxreconstruct (0.9.2+30-1lunarg20.04-1) focal; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.3
  * Update compress convert option handling
  * Add compression format to gfxrecon-info
  * Add meta-data block size utility func
  * Ignore wait operations for imported semaphores
  * Add replay option to sync queue submissions
  * Update usage documentation for CLI arg changes

  [ Dror Smolarsky ]
  * Changes to the build output directories
  * Remove test package generation directory overlap

  [ Mike Schuchardt ]
  * Try more names when dlopen-ing windowing libs

  [ Dustin Graves ]
  * Revert "Remove test package generation directory overlap"
  * Revert "Changes to the build output directories"
  * Refine replay layer check

  [ Dror Smolarsky ]
  * Changes to the build output directories
  * Change code style directive from macro to function

  [ Dustin Graves ]
  * Add build/install dir options to build.py
  * Update build.py 32-bit support
  * Update replay surface management
  * Track replay surfaces/swapchains with IDs
  * Fix file processor error reporting
  * Add buffer/image usage tracker for trimmed files
  * Add generator for resource reference consumer
  * Add trimmed gfxr file optimizer
  * Initial support for descriptor copies
  * Handle consecutive descriptor binding copies
  * Improve descriptor update template handling
  * Stop optimizer when state block not present
  * Update header to 1.2.154
  * Remove alternate --sync option
  * Add file conversion utility to decoder framework

 -- John Zupin <john@odin>  Mon, 28 Sep 2020 18:10:57 -0600

gfxreconstruct (0.9.1+45-1ubuntu20.04-4) focal; urgency=medium

  [ Dustin Graves ]
  * Fix invalid block id from compression convert
  * Fix resize2 block size
  * Update required package list from BUILD.md

  [ John Zupin ]
  * debian: remove README.Debian

 -- John Zupin <john@odin>  Fri, 31 Jul 2020 17:29:51 -0600

gfxreconstruct (0.9.1+45-1ubuntu20.04-3) focal; urgency=medium

  * control: add zlib compression lib to build env
  * rules: build type is now RelWithDebInfo

 -- John Zupin <john@odin>  Wed, 29 Jul 2020 18:27:40 -0600

gfxreconstruct (0.9.1+45-1lunarg20.04-2) focal; urgency=medium

  * UNRELEASED

 -- John Zupin <john@odin>  Tue, 28 Jul 2020 13:41:21 -0600

gfxreconstruct (0.9.1+45-1lunarg20.04-1) focal; urgency=medium

  [ John Zupin ]
  * patch as bionic version

  [ Dustin Graves ]
  * Ensure surfaces are destroyed on replay exit
  * Update main README for usage doc changes
  * Set version to 0.9.2
  * Add missing meta-data types to gfxrecon-compress
  * Send all Xcb atom requests together

  [ Christophe ]
  * Fix interaction with vkconfig

  [ KarenGhavam-lunarG ]
  * Add new LunarG logo to usage docs

  [ Dror Smolarsky ]
  * Add C++ lint  (using clang-tidy) build directives
  * Add clang-tidy config file
  * Add license comments to various CMakeLists files.
  * Add newline at end of framework/util/CMakeLists.txt

  [ Dustin Graves ]
  * Update versioning for tag checkouts
  * Add third party license file
  * Initial GitHub workflows
  * Add refspec option for code style check
  * Enable code style check for CI builds
  * Fix display message decode
  * Replay memory allocator changes to aid debugging
  * Add error logging for compress/decompress
  * Add option to disable abort() message box
  * Add -h option to command line utilities

  [ Mike Schuchardt ]
  * Update header to 1.2.146
  * Refine vk.xml array length processing

  [ xooi ]
  * replay: add resource tracking consumer class
  * replay: add resource tracking consumer base class
  * replay: memory portability first pass implementation
  * replay: update offsets calculation and 2nd pass replay
  * gfxrec-replay: fix resource data tracking and updates
  * replay: add get resources memory requirement calls
  * replay: add --enable-mutipass-replay-portabolity|--emrp
  * replay: fix utility function pointer reference
  * replay: update binding offset calculation for 2 pass replay
  * replay: update --emrp argument option usage

  [ Dustin Graves ]
  * Remove resource tracking code gen
  * Add handle IDs to resource allocator create calls
  * Add const to tracked object info get methods
  * Add custom allocator for binding adjustment
  * Handle allocations with no bindings for realign

  [ John Zupin ]
  * copyright: updated for release

  [ Dustin Graves ]
  * Add constant for null handle IDs
  * Add missing license text
  * Add bind2 support to realign allocator
  * Add flush/invalidate realign support
  * Use pretransform with Android screen orientation
  * Add settings file sample and documentation
  * Update header to 1.2.148

  [ John Zupin ]
  * copyright: updated for lunarg debian files
  * patch: gfxrcon-toascii updated for 148 package
  * patch: updated to patch focal to version

 -- John Zupin <john@odin>  Mon, 27 Jul 2020 17:38:53 -0600

gfxreconstruct (0.9.0+19-0ubuntu18.04) bionic; urgency=medium

  [ David Pinedo ]
  * Change USAGE documents heading

  [ Dustin Graves ]
  * Fix incomplete block at EOF false positive

  [ John Zupin ]
  * control: renamed gfxreconstruct to lunarg-gfxreconstruct

  [ David Pinedo ]
  * Don't allow Cygwin Python for gfxrecon-capture.py

  [ John Zupin ]
  * copyright: updated date

  [ David Pinedo ]
  * Minor usage documenation edits
  * Remove 'python' from cmd line in instructions for running py scripts

  [ Dustin Graves ]
  * Treat sdk branch as release branch
  * Fix size_t to int conversion in compression code

 -- John Zupin <john@odin>  Thu, 04 Jun 2020 18:43:38 -0600

gfxreconstruct (0.9.0+12-0ubuntu18.04) bionic; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.1
  * Use ZSTD_compressBound function

  [ David Pinedo ]
  * Use os.path.join in gfxrecon.py script
  * Remove unneeded imports from python scripts

  [ John Zupin ]
  * copyright: initial update

  [ Dustin Graves ]
  * Fix null assignment in gfxrecon-info
  * Fix incomplete block header check
  * Add missing member initialization

  [ David Pinedo ]
  * Documentation changes for SDK release

  [ Dustin Graves ]
  * Documentation cleanup
  * Replace alt signal stack with SA_ONSTACK override
  * Update header to 1.2.136
  * Update header to 1.2.141

 -- John Zupin <john@odin>  Mon, 01 Jun 2020 19:16:05 -0600

gfxreconstruct (0.9.0-0ubuntu18.04) bionic; urgency=medium

  [ Dustin Graves ]
  * Set version to 0.9.0

  [ Mike Schuchardt ]
  * Tell clang-format to ignore generated directory
  * Track command buffer handles inside structs

  [ Dustin Graves ]
  * Fixes for clang-tidy issues from util code
  * Address compiler warnings
  * Enable warnings as errors for desktop builds
  * Update Xcb event sequence no comparison logic
  * Warn for VK_INCOMPLETE on replay

  [ xooi ]
  * Add hotkey trim trigger functions
  * Implement trim hotkey trigger in Linux

  [ Dustin Graves ]
  * Add file lock for trimming state snapshot
  * Override default F10 key behavior on Windows
  * Store additional object info in handle map
  * Use HandlePointerDecoder memory for output handles
  * Pointer decoders manage output param allocation
  * Pass PointerDecoder to override funcs
  * Pass handle info struct to replay overrides
  * Add object info structs to object mapper
  * Move replay data to handle info structs
  * Fix vkMapMemory capture with VK_WHOLE_SIZE
  * Use non-stream LZ4 compress/decompress calls
  * Remove try-catch blocks from compression code
  * Add fullscreen exclusive win32 replay support
  * Fix command tracking warnings
  * Remove the page guard lazy copy option
  * Add persistent memory page guard option
  * Use bitwise operations with page size calculations
  * Add buffer size alignment page guard option
  * Update page guard interface for imported memory
  * Add AHardwareBuffer support
  * Add AHB creation to trim state snapshot
  * Remove persistent shadow memory table
  * Make all VulkanConsumer methods empty functions
  * Add a gfxrecon-info command line utility

  [ David Pinedo ]
  * Fix encode/decode of wchar_t strings

  [ Dustin Graves ]
  * Ensure 16-bit encode/decode for LPCWSTR
  * Add trimming support for bind2 calls
  * Add support for Zstandard compression
  * Case insensitive arg comparison for gfxrecon-compress
  * Fix enum util declarations
  * Fix Android replay crash on error
  * Initial memory allocator implementation
  * Integrate memory allocator with replay consumer
  * Add memory type index remapping
  * Record device memory reqs before device creation
  * Remove redundant memory prop tracking
  * Override physical device memory property replay
  * Expand allocator interface for resource creation
  * Add VMA dependency
  * Initial rebind allocator implementation
  * Mapped memory write remap for rebind allocator
  * Add rebind support for bind buffer2/image2
  * Add rebind support for flush/invalidate ranges
  * Decouple replay consumer and resource allocator
  * Update trim file replay for memory portability
  * Handle image row alignment mismatch on replay
  * Add --memory-translation replay option
  * Add missing resource queries to trim state
  * Add phys device memory props to trim state
  * Report replay memory incompatibility

  [ Greg Fischer ]
  * Replace shader feature

  [ Mike Schuchardt ]
  * Dynamically load linux windowing libs for replay
  * Linux replay wsi fallback
  * Add replay argument for WSI selection

  [ Greg Fischer ]
  * Shader extract feature
  * Use handle id in filename for shader extract and replace.

  [ Mike Schuchardt ]
  * Move platform keyboard code into util
  * dlopen xcb-keysyms.so for XCB hotkey capture
  * Add hotkey support for Xlib via XCB
  * Improve hotkey capture error messages

  [ Dustin Graves ]
  * Fix const behavior for consumer classes
  * Use pointer decoder output memory for handles
  * On demand replay handle memory allocation
  * Return replay size from enum phys devices override
  * Store variable array counts on replay
  * Adjust variable array size on replay
  * Conditional allocation for replay outputs
  * Update to 1.2.134 header
  * Add vkGetPhysicalDeviceToolPropertiesEXT support
  * Cleanup capture layer code
  * Set layer version to project version
  * Conditionally use SA_ONSTACK with sigaction

  [ Greg Fischer ]
  * Fix usage for gfxrecon-extract and gfxrecon --replace shaders.

  [ Mike Schuchardt ]
  * Scale replay wayland surface to match output
  * Add fullscreen support for wayland replay
  * Use reinterpret_cast in wayland loader util

  [ Dustin Graves ]
  * Record phys device props before device creation
  * Handle available physical device differences
  * Fix trim issue with non-zero memory offsets
  * Fix rebind memory translation offsets
  * Add replay memory allocation index check
  * Keep dGPU allocations host visible on rebind
  * Adjust loader search order
  * Build platform XLIB_XRANDR without XLIB
  * Ensure CheckLibraryExists.cmake is included
  * Eliminate duplicate handle mapping code
  * Add missing logging.h include

  [ John Zupin ]
  * Add CMake install rules

  [ Dustin Graves ]
  * Fix replay for image/buffer destroy w/null handle
  * Use sys.executable to invoke Python
  * Track descriptor set dependencies for trim

  [ David Pinedo ]
  * Initial launcher script implementations

  [ Dustin Graves ]
  * Fix 32-bit debug build warning
  * Update extract consumer interface

  [ Bob Ellison ]
  * Update docs for Clang Format v9

  [ Dustin Graves ]
  * Update BUILD and CONTRIBUTING docs
  * Add 32-bit Linux build instructions

  [ David Pinedo ]
  * Renamed layer json file to VkLayer_gfxreconstruct.json

  [ Dustin Graves ]
  * Update for ClangFormat v9

  [ Mike Schuchardt ]
  * Fix path quoting in json generator

  [ John Zupin ]
  * UNRELEASED

 -- John Zupin <john@odin>  Fri, 22 May 2020 17:18:53 -0600

gfxreconstruct (0.8.1-1) unstable; urgency=medium

  * Initial package build for testing

 -- John Zupin <johnz@lunarg.com>  Wed, 20 May 2020 10:59:54 -0600
